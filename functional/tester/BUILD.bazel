load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "case.go",
        "case_delay.go",
        "case_external.go",
        "case_failpoints.go",
        "case_network_blackhole.go",
        "case_network_delay.go",
        "case_no_fail.go",
        "case_sigquit_remove.go",
        "case_sigquit_remove_quorum.go",
        "case_sigterm.go",
        "checker.go",
        "checker_kv_hash.go",
        "checker_lease_expire.go",
        "checker_no_check.go",
        "checker_runner.go",
        "cluster.go",
        "cluster_read_config.go",
        "cluster_run.go",
        "cluster_shuffle.go",
        "doc.go",
        "metrics_report.go",
        "stresser.go",
        "stresser_composite.go",
        "stresser_key.go",
        "stresser_lease.go",
        "stresser_runner.go",
        "utils.go",
    ],
    importpath = "github.com/davidsmd/etcd/functional/tester",
    visibility = ["//visibility:public"],
    deps = [
        "//clientv3:go_default_library",
        "//etcdserver:go_default_library",
        "//etcdserver/api/v3rpc/rpctypes:go_default_library",
        "//functional/rpcpb:go_default_library",
        "//pkg/debugutil:go_default_library",
        "//pkg/fileutil:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promhttp:go_default_library",
        "@in_gopkg_yaml_v2//:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//transport:go_default_library",
        "@org_golang_x_time//rate:go_default_library",
        "@org_uber_go_zap//:go_default_library",
    ],
)
